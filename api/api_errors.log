[08-May-2025 06:38:15 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Wildflower","quantity":"34","quality":"Premium","harvestDate":"2025-05-01","notes":"second"}
[08-May-2025 06:38:15 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 06:41:18 Europe/Berlin] Incoming request: {
    "hiveID": 1,
    "harvestDate": "2025-05-08",
    "quantity": 10,
    "type": "Honey",
    "quality": "Good",
    "notes": "First harvest of the season"
}
[08-May-2025 06:41:18 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 06:45:28 Europe/Berlin] Incoming request: hiveID=1&harvestDate=2025-05-01&quantity=12&type=flower&quality=standard&notes=second
[08-May-2025 06:47:30 Europe/Berlin] Incoming request: hiveID=1&harvestDate=2025-05-01&quantity=12&type=flower&quality=standard&notes=second
[08-May-2025 06:47:30 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 06:48:50 Europe/Berlin] Incoming request: hiveID=1&harvestDate=2025-05-01&quantity=12&type=flower&quality=standard&notes=second
[08-May-2025 06:48:50 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 06:50:52 Europe/Berlin] Incoming request: hiveID=23&harvestDate=2025-05-08&quantity=23&type=flower&quality=standard&notes=good
[08-May-2025 06:50:52 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 06:54:50 Europe/Berlin] Incoming request: hiveID=23&harvestDate=2025-05-08&quantity=23&type=flower&quality=standard&notes=good
[08-May-2025 06:54:50 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 06:54:53 Europe/Berlin] Incoming request: hiveID=23&harvestDate=2025-05-08&quantity=23&type=flower&quality=standard&notes=good
[08-May-2025 06:54:53 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 06:55:11 Europe/Berlin] Equipment request: {"action":"getAll"}
[08-May-2025 06:55:11 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[08-May-2025 06:55:11 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[08-May-2025 07:11:48 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Wildflower","quantity":"34","quality":"Premium","harvestDate":"2025-05-01","notes":"good"}
[08-May-2025 07:11:48 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:13:28 Europe/Berlin] Adding production: {"action":"add"}
[08-May-2025 07:13:28 Europe/Berlin] Result from controller: {"success":false,"error":"Missing required fields"}
[08-May-2025 07:14:08 Europe/Berlin] Incoming request: {"hiveNumber":"87","location":"library","dateEstablished":"2025-05-07","queenAge":"3","notes":"In good","action":"add"}
[08-May-2025 07:27:45 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Wildflower","quantity":"23","quality":"Premium","harvestDate":"2025-05-08","notes":"good"}
[08-May-2025 07:27:45 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:28:05 Europe/Berlin] Equipment request: {"action":"getAll"}
[08-May-2025 07:28:05 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[08-May-2025 07:28:05 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[08-May-2025 07:32:36 Europe/Berlin] Equipment request: {"action":"getAll"}
[08-May-2025 07:32:36 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[08-May-2025 07:32:36 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[08-May-2025 07:35:05 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Clover","quantity":"34","quality":"Premium","harvestDate":"2025-05-07","notes":"234"}
[08-May-2025 07:35:05 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:41:00 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Clover","quantity":"20","quality":"Premium","harvestDate":"2025-05-01","notes":"s"}
[08-May-2025 07:41:00 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:47:11 Europe/Berlin] Incoming request: {
    "hiveID": 1,
    "harvestDate": "2025-05-08",
    "quantity": 10,
    "type": "Honey",
    "quality": "Good",
    "notes": "First harvest of the season"
}
[08-May-2025 07:47:11 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:47:17 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Clover","quantity":"20","quality":"Premium","harvestDate":"2025-05-01","notes":"s"}
[08-May-2025 07:47:17 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:57:37 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Clover","quantity":"20","quality":"Premium","harvestDate":"2025-05-01","notes":"s"}
[08-May-2025 07:57:37 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:57:42 Europe/Berlin] Incoming request: {
    "hiveID": 1,
    "harvestDate": "2025-05-08",
    "quantity": 10,
    "type": "Honey",
    "quality": "Good",
    "notes": "First harvest of the season"
}
[08-May-2025 07:57:42 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 07:57:53 Europe/Berlin] Adding production: {"action":"add"}
[08-May-2025 07:57:53 Europe/Berlin] Result from controller: {"success":false,"error":"Missing required fields"}
[08-May-2025 07:57:54 Europe/Berlin] Adding production: {"action":"add"}
[08-May-2025 07:57:54 Europe/Berlin] Result from controller: {"success":false,"error":"Missing required fields"}
[08-May-2025 08:00:22 Europe/Berlin] Incoming request: {"hiveID":"2","type":"Wildflower","quantity":10,"quality":"Premium","harvestDate":"2025-05-01","notes":"good"}
[08-May-2025 08:00:22 Europe/Berlin] Server error: Invalid response from controller
[08-May-2025 08:17:58 Europe/Berlin] Equipment request: {"action":"getAll"}
[08-May-2025 08:17:58 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[08-May-2025 08:17:58 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:26:15 Europe/Berlin] Incoming request: {"controller":"auth","action":"login","username":"admin","password":"123456"}
[09-May-2025 12:28:38 Europe/Berlin] Incoming request: {"action":"delete","hiveID":2}
[09-May-2025 12:28:43 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 12:28:43 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 12:28:43 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:28:46 Europe/Berlin] Incoming request: {"controller":"equipment","action":"delete","equipmentID":1}
[09-May-2025 12:28:46 Europe/Berlin] Equipment request: {"controller":"equipment","action":"delete","equipmentID":1}
[09-May-2025 12:28:46 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:28:46 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 12:28:46 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 12:28:51 Europe/Berlin] Incoming request: {"controller":"equipment","action":"delete","equipmentID":1}
[09-May-2025 12:28:51 Europe/Berlin] Equipment request: {"controller":"equipment","action":"delete","equipmentID":1}
[09-May-2025 12:28:51 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 12:28:51 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 12:28:51 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:28:54 Europe/Berlin] Incoming request: {"controller":"equipment","action":"delete","equipmentID":1}
[09-May-2025 12:28:54 Europe/Berlin] Equipment request: {"controller":"equipment","action":"delete","equipmentID":1}
[09-May-2025 12:28:54 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:28:54 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 12:28:54 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 12:29:32 Europe/Berlin] Incoming request: {"controller":"equipment","action":"getByType","type":"Tool"}
[09-May-2025 12:29:32 Europe/Berlin] Equipment request: {"controller":"equipment","action":"getByType","type":"Tool"}
[09-May-2025 12:30:21 Europe/Berlin] Incoming request: {"hiveID":"3","type":"Wildflower","quantity":23,"quality":"Premium","harvestDate":"2025-05-09","notes":"Good"}
[09-May-2025 12:30:21 Europe/Berlin] Server error: Invalid response from controller
[09-May-2025 12:41:08 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 12:41:08 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 12:41:08 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:43:14 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:43:14 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 12:43:14 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 12:52:28 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 12:52:28 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 12:52:28 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 14:08:58 Europe/Berlin] Incoming request: {"controller":"auth","action":"login","username":"admin","password":"123456"}
[09-May-2025 14:09:42 Europe/Berlin] Incoming request: {"hiveID":"3","type":"Wildflower","quantity":23,"quality":"Premium","harvestDate":"2025-05-09","notes":"good"}
[09-May-2025 14:09:42 Europe/Berlin] Server error: Invalid response from controller
[09-May-2025 16:15:34 Europe/Berlin] Incoming request: {"controller":"auth","action":"login","username":"admin","password":"123456"}
[09-May-2025 16:22:44 Europe/Berlin] Incoming request: {"hiveID":"3","type":"Wildflower","quantity":23,"quality":"Premium","harvestDate":"2025-05-15","notes":"good"}
[09-May-2025 16:22:44 Europe/Berlin] Server error: Invalid response from controller
[09-May-2025 16:38:33 Europe/Berlin] Equipment request: {"action":"getAll"}
[09-May-2025 16:38:33 Europe/Berlin] Fetched equipment: Array
(
    [0] => Array
        (
            [equipmentID] => 1
            [name] => Electric Drill
            [type] => Tool
            [quantity] => 10
            [condition_status] => Good
            [purchaseDate] => 2023-03-10
            [notes] => Used in workshop A
            [status] => Active
        )

    [1] => Array
        (
            [equipmentID] => 2
            [name] => Safety Helmet
            [type] => Safety Gear
            [quantity] => 20
            [condition_status] => New
            [purchaseDate] => 2024-01-15
            [notes] => Standard issue helmets
            [status] => Active
        )

    [2] => Array
        (
            [equipmentID] => 3
            [name] => Welding Machine
            [type] => Tool
            [quantity] => 5
            [condition_status] => Fair
            [purchaseDate] => 2022-06-22
            [notes] => Needs maintenance
            [status] => Active
        )

    [3] => Array
        (
            [equipmentID] => 4
            [name] => High-Vis Vest
            [type] => Safety Gear
            [quantity] => 50
            [condition_status] => New
            [purchaseDate] => 2024-03-01
            [notes] => 
            [status] => Active
        )

    [4] => Array
        (
            [equipmentID] => 5
            [name] => Ladder
            [type] => Tool
            [quantity] => 7
            [condition_status] => Used
            [purchaseDate] => 2021-11-09
            [notes] => Stored in warehouse 2
            [status] => Active
        )

    [5] => Array
        (
            [equipmentID] => 14
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [6] => Array
        (
            [equipmentID] => 15
            [name] => 
            [type] => 
            [quantity] => 0
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => 
            [status] => Active
        )

    [7] => Array
        (
            [equipmentID] => 16
            [name] => Boots
            [type] => Protective Gear
            [quantity] => 23
            [condition_status] => New
            [purchaseDate] => 2025-05-07
            [notes] => good
            [status] => Active
        )

)

[09-May-2025 16:38:33 Europe/Berlin] Equipment request: {"action":"getInventoryReport"}
[09-May-2025 16:55:58 Europe/Berlin] Incoming request: {"hiveID":"3","checkDate":"2025-05-09","colonyStrength":"5","queenPresent":"1","diseaseSymptoms":"good","pestProblems":"good","notes":"good","action":"addHealth"}
[09-May-2025 16:57:38 Europe/Berlin] Incoming request: {"hiveID":"3","checkDate":"2025-05-09","colonyStrength":"5","queenPresent":"1","diseaseSymptoms":"good","pestProblems":"good","notes":"good","action":"addHealth"}
[09-May-2025 16:58:15 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:01:38 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:02:33 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:03:24 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:07:02 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:38:35 Europe/Berlin] PHP Warning:  require_once(/opt/lampp/htdocs/inventory-management-system/controllers/production/../../model/production/production.php): Failed to open stream: No such file or directory in /opt/lampp/htdocs/inventory-management-system/controllers/production/ProductionController.php on line 2
[09-May-2025 17:38:35 Europe/Berlin] PHP Fatal error:  Uncaught Error: Failed opening required '/opt/lampp/htdocs/inventory-management-system/controllers/production/../../model/production/production.php' (include_path='.:/opt/lampp/lib/php') in /opt/lampp/htdocs/inventory-management-system/controllers/production/ProductionController.php:2
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/api/handler.php(50): require_once()
#1 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/controllers/production/ProductionController.php on line 2
[09-May-2025 17:38:41 Europe/Berlin] PHP Warning:  require_once(/opt/lampp/htdocs/inventory-management-system/controllers/production/../../model/production/production.php): Failed to open stream: No such file or directory in /opt/lampp/htdocs/inventory-management-system/controllers/production/ProductionController.php on line 2
[09-May-2025 17:38:41 Europe/Berlin] PHP Fatal error:  Uncaught Error: Failed opening required '/opt/lampp/htdocs/inventory-management-system/controllers/production/../../model/production/production.php' (include_path='.:/opt/lampp/lib/php') in /opt/lampp/htdocs/inventory-management-system/controllers/production/ProductionController.php:2
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/api/handler.php(50): require_once()
#1 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/controllers/production/ProductionController.php on line 2
[09-May-2025 17:39:50 Europe/Berlin] PHP Warning:  require_once(/opt/lampp/htdocs/inventory-management-system/model/production/../../config/database.php): Failed to open stream: No such file or directory in /opt/lampp/htdocs/inventory-management-system/model/production/production.php on line 2
[09-May-2025 17:39:50 Europe/Berlin] PHP Fatal error:  Uncaught Error: Failed opening required '/opt/lampp/htdocs/inventory-management-system/model/production/../../config/database.php' (include_path='.:/opt/lampp/lib/php') in /opt/lampp/htdocs/inventory-management-system/model/production/production.php:2
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/production/ProductionController.php(2): require_once()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(50): require_once('/opt/lampp/htdo...')
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/production/production.php on line 2
[09-May-2025 17:41:18 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:43:36 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:45:10 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:46:35 Europe/Berlin] PHP Fatal error:  Uncaught TypeError: HiveController::__construct(): Argument #1 ($hiveModel) must be of type Hive, PDO given, called in /opt/lampp/htdocs/inventory-management-system/api/handler.php on line 110 and defined in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php:7
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#1 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 7
[09-May-2025 17:47:08 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function Hive::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 8 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/hive/hive.php:6
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(8): Hive->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/hive/hive.php on line 6
[09-May-2025 17:49:11 Europe/Berlin] PHP Fatal error:  Uncaught Error: Call to private method ProductionController::getAllProduction() from global scope in /opt/lampp/htdocs/inventory-management-system/api/handler.php:140
Stack trace:
#0 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/api/handler.php on line 140
[09-May-2025 17:49:11 Europe/Berlin] PHP Fatal error:  Uncaught Error: Call to undefined method ProductionController::getReport() in /opt/lampp/htdocs/inventory-management-system/api/handler.php:128
Stack trace:
#0 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/api/handler.php on line 128
[09-May-2025 17:51:39 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:51:43 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:51:43 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:51:45 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:51:45 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:58:13 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:59:22 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 17:59:22 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:13:56 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:14:55 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:15:32 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:20:04 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:20:04 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:21:06 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:21:14 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:21:14 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:21:19 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:21:19 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:22:05 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:22:11 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:22:11 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:22:17 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:22:17 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:22:46 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:22:52 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:24:24 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:24:26 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:24:28 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:24:28 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:24:32 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:25:33 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:29:06 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:30:32 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:30:32 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:30:54 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:30:54 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:31:43 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:32:16 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:32:16 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:33:21 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:35:15 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:35:18 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:35:41 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:35:54 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:45:14 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:45:21 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:45:21 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:51:02 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:51:09 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:51:15 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:51:36 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:51:41 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:51:51 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:52:05 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:52:09 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:52:12 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:53:27 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:56:28 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:57:18 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:58:54 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:58:56 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 18:59:24 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:00:51 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:01:47 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:02:01 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:02:10 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:03:20 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:03:27 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:03:33 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:03:50 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:03:51 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:07 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:09 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:11 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:16 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:19 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:24 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:25 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:36 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:39 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:45 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:53 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:04:55 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:05:22 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:05:24 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:05:25 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:05:27 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:08:24 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:08:32 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:08:42 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:08:42 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:08:44 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:08:47 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:08:51 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:14:25 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:14:28 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:14:31 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:14:36 Europe/Berlin] PHP Fatal error:  Cannot declare class HiveHealth, because the name is already in use in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 2
[09-May-2025 19:15:42 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:18:00 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:18:04 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:18:12 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:24:56 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:25:14 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:25:17 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:25:20 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:25:40 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:25:43 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:25:51 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:30:48 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:30:50 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[09-May-2025 19:30:54 Europe/Berlin] PHP Fatal error:  Uncaught ArgumentCountError: Too few arguments to function HiveHealth::__construct(), 0 passed in /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php on line 13 and exactly 1 expected in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php:5
Stack trace:
#0 /opt/lampp/htdocs/inventory-management-system/controllers/hive/HiveController.php(13): HiveHealth->__construct()
#1 /opt/lampp/htdocs/inventory-management-system/api/handler.php(110): HiveController->__construct(Object(PDO))
#2 {main}
  thrown in /opt/lampp/htdocs/inventory-management-system/model/health/HealthModel.php on line 5
[10-May-2025 03:48:12 Europe/Berlin] Login attempt: {"action":"login","username":"admin@example.com","password":"password"}
[10-May-2025 03:48:12 Europe/Berlin] Login successful: admin@example.com
[10-May-2025 06:37:56 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[10-May-2025 06:37:56 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[10-May-2025 06:37:56 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[10-May-2025 06:37:56 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[10-May-2025 06:37:56 Europe/Berlin] _POST: Array
(
)

[10-May-2025 06:37:56 Europe/Berlin] _GET: Array
(
)

[10-May-2025 06:37:56 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[10-May-2025 06:37:56 Europe/Berlin] Login successful: admin
[10-May-2025 07:01:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:01:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:01:37 Europe/Berlin] API Request: POST /inventory-management-system/api/handler.php - Endpoint: handler.php - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:01:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:01:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:01:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:01:37 Europe/Berlin] API Request: POST /inventory-management-system/api/handler.php - Endpoint: handler.php - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:01:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:01:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:01:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:01:37 Europe/Berlin] API Request: POST /inventory-management-system/api/handler.php - Endpoint: handler.php - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:01:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:01:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:01:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:01:37 Europe/Berlin] API Request: POST /inventory-management-system/api/handler.php - Endpoint: handler.php - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:01:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:01:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:01:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:01:37 Europe/Berlin] API Request: POST /inventory-management-system/api/handler.php - Endpoint: handler.php - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:01:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:01:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:01:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:01:37 Europe/Berlin] API Request: POST /inventory-management-system/api/handler.php - Endpoint: handler.php - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:01:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:01:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:01:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:03:17 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:03:17 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:03:17 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:03:17 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:03:17 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:03:17 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:03:17 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:03:17 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:03:17 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:03:17 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:03:17 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:03:17 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:03:17 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:03:17 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:03:17 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:03:17 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:03:17 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:03:17 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:03:17 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:03:17 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:03:17 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:03:17 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:03:17 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:03:17 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:03:17 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:03:17 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:03:17 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:03:17 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:03:17 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:03:17 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:03:17 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:03:17 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:03:17 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:03:17 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:03:17 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:03:17 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:04:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:04:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:04:37 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:04:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:04:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:04:37 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:04:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:04:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:04:37 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:04:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:04:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:04:37 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:04:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:04:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:04:37 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:04:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:04:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:04:37 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:04:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:04:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:04:37 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:04:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:04:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:04:37 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:04:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:04:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:04:37 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:04:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:04:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:04:37 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:04:37 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:04:37 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:04:37 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:04:37 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:04:37 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:04:37 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:04:37 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:07:20 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:07:20 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:07:20 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:07:20 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:07:20 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:07:20 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:07:20 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:07:20 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:07:20 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:07:20 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:07:20 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:07:20 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:07:20 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:07:20 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:07:20 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:07:20 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:07:20 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:07:20 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:07:20 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:07:20 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:07:20 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:07:20 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:07:20 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:07:20 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:07:20 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:07:20 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:07:20 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:07:20 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:07:20 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:07:20 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:07:20 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:07:20 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:07:20 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:07:20 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:07:20 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:07:20 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:07:20 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:10:43 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:10:43 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:10:43 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:10:43 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:10:43 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:10:43 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:10:43 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:10:43 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:10:43 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:10:43 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:10:43 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:10:43 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:10:43 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:10:43 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:10:43 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:10:43 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:10:43 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:10:43 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:10:43 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:10:43 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:10:43 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:10:43 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:10:43 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:10:43 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:10:43 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:10:43 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:10:43 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:10:43 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:10:43 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:10:43 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:10:43 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:10:43 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:10:43 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:10:43 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:10:43 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:10:43 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:10:43 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:39:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:39:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:39:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:39:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:39:59 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:39:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:39:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:39:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:39:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:39:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:39:59 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:39:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:39:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:39:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:39:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:39:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:39:59 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:39:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:39:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:39:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:39:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:39:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:39:59 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:39:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:39:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:39:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:39:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:39:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:39:59 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:39:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:39:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:39:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:39:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:39:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:39:59 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:39:59 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:39:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:42:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:42:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:42:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:42:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:42:16 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:42:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:42:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:42:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:42:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:42:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:42:16 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:42:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:42:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:42:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:42:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:42:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:42:16 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:42:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:42:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:42:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:42:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:42:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:42:16 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:42:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:42:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:42:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:42:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:42:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:42:16 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:42:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:42:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:42:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:42:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:42:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:42:16 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:42:16 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:42:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:54:57 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:54:57 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:54:57 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:54:57 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:54:57 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:54:57 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:54:57 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:54:57 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:54:57 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:54:57 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:54:57 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:54:57 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:54:57 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:54:57 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:54:57 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:54:57 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:54:57 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:54:57 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:54:57 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:54:57 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:54:57 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:54:57 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 07:54:57 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 07:54:57 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 07:54:57 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:54:57 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:54:57 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:54:57 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 07:54:57 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 07:54:57 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 07:54:57 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:54:57 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:54:57 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 07:54:57 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 07:54:57 Europe/Berlin] _POST: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] _GET: Array
(
)

[10-May-2025 07:54:57 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 07:54:57 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:07:32 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:07:32 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:07:32 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:07:32 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:07:32 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:07:32 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:07:32 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:07:32 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:07:32 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:07:32 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:07:32 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:07:32 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:07:32 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:07:32 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:07:32 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:07:32 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:07:32 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:07:32 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:07:32 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:07:32 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:07:32 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:07:32 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:07:32 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:07:32 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:07:32 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:07:32 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:07:32 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:07:32 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:07:32 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:07:32 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:07:32 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:07:32 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:07:32 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:07:32 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:07:32 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:07:32 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:07:32 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:10:06 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:10:06 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:10:06 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:10:06 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:10:06 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:10:06 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:10:06 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:10:06 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:10:06 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:10:06 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:10:06 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:10:06 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:10:06 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:10:06 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:10:06 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:10:06 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:10:06 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:10:06 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:10:06 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:10:06 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:10:06 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:10:06 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:10:06 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:10:06 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:10:06 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:10:06 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:10:06 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:10:06 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:10:06 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:10:06 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:10:06 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:10:06 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:10:06 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:10:06 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:10:06 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:10:06 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:10:06 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:27:24 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:27:24 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:27:24 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:27:24 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:27:24 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:27:24 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:27:24 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:27:24 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:27:24 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:27:24 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:27:24 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:27:24 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:27:24 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:27:24 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:27:24 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:27:24 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:27:24 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:27:24 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:27:24 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:27:24 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:27:24 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:27:24 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:27:24 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:27:24 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:27:24 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:27:24 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:27:24 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:27:24 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:27:24 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:27:24 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:27:24 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:27:24 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:27:24 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:27:24 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:27:24 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:27:24 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:27:24 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:22 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:22 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:22 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:22 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:22 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:31:22 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:22 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:22 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:22 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:22 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:22 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:31:22 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:22 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:22 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:22 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:22 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:22 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:31:22 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:22 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:22 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:22 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:22 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:22 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:31:22 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:22 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:22 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:22 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:22 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:22 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:31:22 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:22 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:22 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:22 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:22 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:22 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:22 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:31:22 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:47 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:47 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:47 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:47 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:47 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:31:47 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:47 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:47 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:47 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:47 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:47 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:31:47 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:47 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:47 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:47 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:47 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:47 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:31:47 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:47 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:47 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:47 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:47 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[10-May-2025 08:31:47 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] Reports endpoint called with action: getProductionReport
[10-May-2025 08:31:47 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[10-May-2025 08:31:47 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:47 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:47 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:47 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[10-May-2025 08:31:47 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[10-May-2025 08:31:47 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[10-May-2025 08:31:47 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:47 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:47 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[10-May-2025 08:31:47 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[10-May-2025 08:31:47 Europe/Berlin] _POST: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] _GET: Array
(
)

[10-May-2025 08:31:47 Europe/Berlin] Reports endpoint called with action: getHealthReport
[10-May-2025 08:31:47 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[11-May-2025 04:55:02 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[11-May-2025 04:55:02 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[11-May-2025 04:55:02 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[11-May-2025 04:55:02 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[11-May-2025 04:55:02 Europe/Berlin] _POST: Array
(
)

[11-May-2025 04:55:02 Europe/Berlin] _GET: Array
(
)

[11-May-2025 04:55:02 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[11-May-2025 04:55:02 Europe/Berlin] Login successful: admin
[11-May-2025 04:55:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[11-May-2025 04:55:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[11-May-2025 04:55:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[11-May-2025 04:55:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[11-May-2025 04:55:16 Europe/Berlin] _POST: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] _GET: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] Reports endpoint called with action: getProductionReport
[11-May-2025 04:55:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[11-May-2025 04:55:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[11-May-2025 04:55:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[11-May-2025 04:55:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[11-May-2025 04:55:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[11-May-2025 04:55:16 Europe/Berlin] _POST: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] _GET: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] Reports endpoint called with action: getHealthReport
[11-May-2025 04:55:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[11-May-2025 04:55:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[11-May-2025 04:55:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[11-May-2025 04:55:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[11-May-2025 04:55:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[11-May-2025 04:55:16 Europe/Berlin] _POST: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] _GET: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[11-May-2025 04:55:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[11-May-2025 04:55:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[11-May-2025 04:55:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[11-May-2025 04:55:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[11-May-2025 04:55:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[11-May-2025 04:55:16 Europe/Berlin] _POST: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] _GET: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] Reports endpoint called with action: getProductionReport
[11-May-2025 04:55:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[11-May-2025 04:55:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[11-May-2025 04:55:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[11-May-2025 04:55:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[11-May-2025 04:55:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[11-May-2025 04:55:16 Europe/Berlin] _POST: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] _GET: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] Reports endpoint called with action: getHealthReport
[11-May-2025 04:55:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[11-May-2025 04:55:16 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[11-May-2025 04:55:16 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[11-May-2025 04:55:16 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[11-May-2025 04:55:16 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[11-May-2025 04:55:16 Europe/Berlin] _POST: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] _GET: Array
(
)

[11-May-2025 04:55:16 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[11-May-2025 04:55:16 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[12-May-2025 13:35:08 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 13:35:08 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 13:35:08 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 13:35:08 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 13:35:08 Europe/Berlin] _POST: Array
(
)

[12-May-2025 13:35:08 Europe/Berlin] _GET: Array
(
)

[12-May-2025 13:35:08 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 13:35:08 Europe/Berlin] Login successful: admin
[12-May-2025 13:58:20 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 13:58:20 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 13:58:20 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 13:58:20 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 13:58:20 Europe/Berlin] _POST: Array
(
)

[12-May-2025 13:58:20 Europe/Berlin] _GET: Array
(
)

[12-May-2025 13:58:20 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 13:58:20 Europe/Berlin] Login successful: admin
[12-May-2025 13:59:14 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"admin"}
[12-May-2025 13:59:14 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => admin
)

[12-May-2025 13:59:14 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => admin
)

[12-May-2025 13:59:14 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"admin"}
[12-May-2025 13:59:14 Europe/Berlin] _POST: Array
(
)

[12-May-2025 13:59:14 Europe/Berlin] _GET: Array
(
)

[12-May-2025 13:59:14 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"admin"}
[12-May-2025 13:59:14 Europe/Berlin] Login failed: Invalid password for user - admin
[12-May-2025 14:12:42 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 14:12:42 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 14:12:42 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 14:12:42 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 14:12:42 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:12:42 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:12:42 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 14:12:42 Europe/Berlin] Login successful: admin
[12-May-2025 14:12:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[12-May-2025 14:12:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[12-May-2025 14:12:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[12-May-2025 14:12:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[12-May-2025 14:12:59 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] Reports endpoint called with action: getProductionReport
[12-May-2025 14:12:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[12-May-2025 14:12:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[12-May-2025 14:12:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[12-May-2025 14:12:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[12-May-2025 14:12:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[12-May-2025 14:12:59 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[12-May-2025 14:12:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[12-May-2025 14:12:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[12-May-2025 14:12:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[12-May-2025 14:12:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[12-May-2025 14:12:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[12-May-2025 14:12:59 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] Reports endpoint called with action: getHealthReport
[12-May-2025 14:12:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[12-May-2025 14:12:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[12-May-2025 14:12:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[12-May-2025 14:12:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[12-May-2025 14:12:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[12-May-2025 14:12:59 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] Reports endpoint called with action: getProductionReport
[12-May-2025 14:12:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[12-May-2025 14:12:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[12-May-2025 14:12:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[12-May-2025 14:12:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[12-May-2025 14:12:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[12-May-2025 14:12:59 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[12-May-2025 14:12:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[12-May-2025 14:12:59 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[12-May-2025 14:12:59 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[12-May-2025 14:12:59 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[12-May-2025 14:12:59 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[12-May-2025 14:12:59 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:12:59 Europe/Berlin] Reports endpoint called with action: getHealthReport
[12-May-2025 14:12:59 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[12-May-2025 14:18:49 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 14:18:49 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 14:18:49 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[12-May-2025 14:18:49 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 14:18:49 Europe/Berlin] _POST: Array
(
)

[12-May-2025 14:18:49 Europe/Berlin] _GET: Array
(
)

[12-May-2025 14:18:49 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[12-May-2025 14:18:49 Europe/Berlin] Login successful: admin
[13-May-2025 09:32:11 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:32:11 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[13-May-2025 09:32:11 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[13-May-2025 09:32:11 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:32:11 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:32:11 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:32:11 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:32:11 Europe/Berlin] Login successful: admin
[13-May-2025 09:36:04 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:36:04 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:36:04 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:36:04 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:36:04 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] Reports endpoint called with action: getProductionReport
[13-May-2025 09:36:04 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:36:04 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:36:04 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:36:04 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:36:04 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:36:04 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[13-May-2025 09:36:04 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:36:04 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:36:04 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:36:04 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:36:04 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:36:04 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] Reports endpoint called with action: getHealthReport
[13-May-2025 09:36:04 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:36:04 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:36:04 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:36:04 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:36:04 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:36:04 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] Reports endpoint called with action: getProductionReport
[13-May-2025 09:36:04 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:36:04 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:36:04 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:36:04 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:36:04 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:36:04 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[13-May-2025 09:36:04 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:36:04 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:36:04 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:36:04 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:36:04 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:36:04 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:36:04 Europe/Berlin] Reports endpoint called with action: getHealthReport
[13-May-2025 09:36:04 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:37:00 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:37:00 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[13-May-2025 09:37:00 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[13-May-2025 09:37:00 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:37:00 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:37:00 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:37:00 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:37:00 Europe/Berlin] Login successful: admin
[13-May-2025 09:39:34 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:39:34 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:39:34 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:39:34 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:39:34 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] Reports endpoint called with action: getProductionReport
[13-May-2025 09:39:34 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:39:34 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:39:34 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:39:34 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:39:34 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:39:34 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[13-May-2025 09:39:34 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:39:34 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:39:34 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:39:34 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:39:34 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:39:34 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] Reports endpoint called with action: getHealthReport
[13-May-2025 09:39:34 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:39:34 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:39:34 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:39:34 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:39:34 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[13-May-2025 09:39:34 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] Reports endpoint called with action: getProductionReport
[13-May-2025 09:39:34 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[13-May-2025 09:39:34 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:39:34 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:39:34 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:39:34 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[13-May-2025 09:39:34 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[13-May-2025 09:39:34 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[13-May-2025 09:39:34 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:39:34 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:39:34 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:39:34 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[13-May-2025 09:39:34 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:39:34 Europe/Berlin] Reports endpoint called with action: getHealthReport
[13-May-2025 09:39:34 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[13-May-2025 09:41:55 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:41:55 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[13-May-2025 09:41:55 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[13-May-2025 09:41:55 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:41:55 Europe/Berlin] _POST: Array
(
)

[13-May-2025 09:41:55 Europe/Berlin] _GET: Array
(
)

[13-May-2025 09:41:55 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[13-May-2025 09:41:56 Europe/Berlin] Login successful: admin
[21-May-2025 13:57:31 Europe/Berlin] Raw POST data: {"action":"login","username":"admin","password":"123456"}
[21-May-2025 13:57:31 Europe/Berlin] Decoded JSON data: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[21-May-2025 13:57:31 Europe/Berlin] API Request: POST /inventory-management-system/api/auth - Endpoint: auth - Raw Params: Array
(
    [action] => login
    [username] => admin
    [password] => 123456
)

[21-May-2025 13:57:31 Europe/Berlin] POST Data: {"action":"login","username":"admin","password":"123456"}
[21-May-2025 13:57:31 Europe/Berlin] _POST: Array
(
)

[21-May-2025 13:57:31 Europe/Berlin] _GET: Array
(
)

[21-May-2025 13:57:31 Europe/Berlin] Login attempt: {"action":"login","username":"admin","password":"123456"}
[21-May-2025 13:57:31 Europe/Berlin] Login successful: admin
[21-May-2025 13:59:19 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[21-May-2025 13:59:19 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[21-May-2025 13:59:19 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[21-May-2025 13:59:19 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[21-May-2025 13:59:19 Europe/Berlin] _POST: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] _GET: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] Reports endpoint called with action: getProductionReport
[21-May-2025 13:59:19 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[21-May-2025 13:59:19 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[21-May-2025 13:59:19 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[21-May-2025 13:59:19 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[21-May-2025 13:59:19 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[21-May-2025 13:59:19 Europe/Berlin] _POST: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] _GET: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[21-May-2025 13:59:19 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[21-May-2025 13:59:19 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getProductionReport"}
[21-May-2025 13:59:19 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[21-May-2025 13:59:19 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[21-May-2025 13:59:19 Europe/Berlin] POST Data: {"controller":"reports","action":"getProductionReport"}
[21-May-2025 13:59:19 Europe/Berlin] _POST: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] _GET: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] Reports endpoint called with action: getProductionReport
[21-May-2025 13:59:19 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getProductionReport
)

[21-May-2025 13:59:19 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[21-May-2025 13:59:19 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[21-May-2025 13:59:19 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[21-May-2025 13:59:19 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[21-May-2025 13:59:19 Europe/Berlin] _POST: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] _GET: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] Reports endpoint called with action: getHealthReport
[21-May-2025 13:59:19 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[21-May-2025 13:59:19 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getEquipmentReport"}
[21-May-2025 13:59:19 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[21-May-2025 13:59:19 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[21-May-2025 13:59:19 Europe/Berlin] POST Data: {"controller":"reports","action":"getEquipmentReport"}
[21-May-2025 13:59:19 Europe/Berlin] _POST: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] _GET: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] Reports endpoint called with action: getEquipmentReport
[21-May-2025 13:59:19 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getEquipmentReport
)

[21-May-2025 13:59:19 Europe/Berlin] Raw POST data: {"controller":"reports","action":"getHealthReport"}
[21-May-2025 13:59:19 Europe/Berlin] Decoded JSON data: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[21-May-2025 13:59:19 Europe/Berlin] API Request: POST /inventory-management-system/api/reports - Endpoint: reports - Raw Params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

[21-May-2025 13:59:19 Europe/Berlin] POST Data: {"controller":"reports","action":"getHealthReport"}
[21-May-2025 13:59:19 Europe/Berlin] _POST: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] _GET: Array
(
)

[21-May-2025 13:59:19 Europe/Berlin] Reports endpoint called with action: getHealthReport
[21-May-2025 13:59:19 Europe/Berlin] Reports params: Array
(
    [controller] => reports
    [action] => getHealthReport
)

